{
  "contractName": "IBlockRacer",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "racer",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "race",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "level",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "lane",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RaceEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "racer",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "race",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "level",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "lane",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RaceExited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "race",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "level",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "distance",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "conditions",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RaceStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "settler",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "race",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "lane",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "LaneSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "settler",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "race",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RaceSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "racer",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "race",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "level",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "place",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "splits",
          "type": "uint16"
        },
        {
          "indexed": false,
          "name": "distance",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "exp",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RaceFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "racer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "acceleration",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "topSpeed",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "traction",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RacerTrained",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "enterRaceQueue",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "exitRaceQueue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "race",
          "type": "uint256"
        }
      ],
      "name": "settleRace",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "training",
          "type": "uint8[]"
        }
      ],
      "name": "train",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "raceNumber",
          "type": "uint256"
        }
      ],
      "name": "getRace",
      "outputs": [
        {
          "name": "start",
          "type": "uint256"
        },
        {
          "name": "level",
          "type": "uint16"
        },
        {
          "name": "distance",
          "type": "uint32"
        },
        {
          "name": "conditions",
          "type": "uint8"
        },
        {
          "name": "lanesReady",
          "type": "uint8"
        },
        {
          "name": "lanesSettled",
          "type": "uint8"
        },
        {
          "name": "settled",
          "type": "bool"
        },
        {
          "name": "racers",
          "type": "uint256[]"
        },
        {
          "name": "finish",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "raceNumber",
          "type": "uint256"
        },
        {
          "name": "lane",
          "type": "uint8"
        }
      ],
      "name": "getRaceLane",
      "outputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "seed",
          "type": "bytes32"
        },
        {
          "name": "speed",
          "type": "uint16"
        },
        {
          "name": "max",
          "type": "uint16"
        },
        {
          "name": "settled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getRacer",
      "outputs": [
        {
          "name": "lastRace",
          "type": "uint256"
        },
        {
          "name": "accel",
          "type": "uint8"
        },
        {
          "name": "top",
          "type": "uint8"
        },
        {
          "name": "traction",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "level",
          "type": "uint16"
        }
      ],
      "name": "getRaceQueue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numSettling",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "experienceOf",
      "outputs": [
        {
          "name": "experience",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"experienceOf\",\"outputs\":[{\"name\":\"experience\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"raceNumber\",\"type\":\"uint256\"}],\"name\":\"getRace\",\"outputs\":[{\"name\":\"start\",\"type\":\"uint256\"},{\"name\":\"level\",\"type\":\"uint16\"},{\"name\":\"distance\",\"type\":\"uint32\"},{\"name\":\"conditions\",\"type\":\"uint8\"},{\"name\":\"lanesReady\",\"type\":\"uint8\"},{\"name\":\"lanesSettled\",\"type\":\"uint8\"},{\"name\":\"settled\",\"type\":\"bool\"},{\"name\":\"racers\",\"type\":\"uint256[]\"},{\"name\":\"finish\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"training\",\"type\":\"uint8[]\"}],\"name\":\"train\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numSettling\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"raceNumber\",\"type\":\"uint256\"},{\"name\":\"lane\",\"type\":\"uint8\"}],\"name\":\"getRaceLane\",\"outputs\":[{\"name\":\"id\",\"type\":\"uint256\"},{\"name\":\"seed\",\"type\":\"bytes32\"},{\"name\":\"speed\",\"type\":\"uint16\"},{\"name\":\"max\",\"type\":\"uint16\"},{\"name\":\"settled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"level\",\"type\":\"uint16\"}],\"name\":\"getRaceQueue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRacer\",\"outputs\":[{\"name\":\"lastRace\",\"type\":\"uint256\"},{\"name\":\"accel\",\"type\":\"uint8\"},{\"name\":\"top\",\"type\":\"uint8\"},{\"name\":\"traction\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exitRaceQueue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"enterRaceQueue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"race\",\"type\":\"uint256\"}],\"name\":\"settleRace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"racer\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"race\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"level\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"lane\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RaceEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"racer\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"race\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"level\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"lane\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RaceExited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"race\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"level\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"distance\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"conditions\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RaceStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"settler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"race\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lane\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LaneSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"settler\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"race\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RaceSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"racer\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"race\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"level\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"place\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"splits\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"distance\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"exp\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RaceFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"racer\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"acceleration\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"topSpeed\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"traction\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RacerTrained\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Brian Ludlam\\r date May 5, 2019\\r\",\"methods\":{\"enterRaceQueue(uint256)\":{\"params\":{\"id\":\"is racer id. Must be owner of entity.\\r\"}},\"exitRaceQueue(uint256)\":{\"params\":{\"id\":\"is racer id. Must be owner of.\\r\"}},\"experienceOf(address)\":{\"params\":{\"account\":\"of owner\\r\"},\"return\":\"experience amount of account.\\r\"},\"getRace(uint256)\":{\"params\":{\"raceNumber\":\"= race number to get.\\r\"},\"return\":\"start = starting block of race. All blocks after calc result until finish\\rlevel = Races seperated and determined by entering racer levels.\\rdistance = Race distance to finish line.\\rconditions = Race track conditions. 1 = dryest, 255 = wetest/muddiest\\rlanesReady = Number of lanes with racers ready. Racers come and go until start\\rlanesSettled = Number of and order of lanes settled.\\rsettled = Race settled flag\\rracers = array of racer ids of racers queued or racing.\\rfinish = Race finish results, empty until race settled, then\\r array of 6 racer ids ordered by place 1st..6th [id in 1st,id in 2nd,...,id in 6th]\\r\"},\"getRaceLane(uint256,uint8)\":{\"params\":{\"lane\":\"= lane number to get in race.\\r\",\"raceNumber\":\"= race number to get.\\r\"},\"return\":\"id = racer id in lane\\rseed = racer's race seed\\rspeed = racer's race speed constant\\rmax = racer's race max speed constant\\rsettled = race lane settled flag\\r\"},\"getRaceQueue(uint16)\":{\"params\":{\"level\":\"= race queue level to check\\r\"},\"return\":\"number of racers queued at level on current block.\\r\"},\"getRacer(uint256)\":{\"params\":{\"id\":\"= racer id to get.\\r\"},\"return\":\"lastRace = last race raced by racer, 0 if none or previously exited race queue\\raccel = accerlation training amount\\rtop = top speed training amount\\rtraction = traction training amount\\r\"},\"numSettling()\":{\"return\":\"count as number of races currently being settled.\\r\"},\"settleRace(uint256)\":{\"params\":{\"race\":\"is race number to settle. \\r\"}},\"train(uint256,uint8[])\":{\"params\":{\"id\":\"is racer id. Must be owner of.\\r\",\"training\":\"is array of 3 8bit (0-255) values representing 3 training amounts.\\r\"}}},\"title\":\"Interface IBlockRacer\\r\"},\"userdoc\":{\"methods\":{\"enterRaceQueue(uint256)\":{\"notice\":\"function enterRaceQueue - TX - Enter racer by id, into race queue by level.\\rOnce 6 racers are queued at any given level, race will start.\\r Racer must not already be racing (or in race queue)\\r Racer level = total training points / 8, rounded down.\\r Racing fee = 18 finney + (Racer Level * 1.8 finney)\\r Settlement Fee = 4 finney.\\r Race Entry Fee = Racing fee + Settlement Fee.\\r GAS = (\\r     first lane - create race and queue - ~210k, \\r     lane 2-5 - queue - ~130k, \\r     last lane - queue and start race - ~140k\\r ) *first per account will be slightly more\\r\"},\"exitRaceQueue(uint256)\":{\"notice\":\"function exitRaceQueue - TX - Exit racer by id, from current race queue. \\rRacer must be in race queue and race not already started, \\r or will fail; otherwise will dequeue racer and refund fees \\r to owner. If 6th racer at level enters queue before exit\\r transaction, race immediately starts, and exit will fail.\\r Race Exit Refund = Racing fee\\r GAS = ~35k - ~75k (depending on lane position)\\r\"},\"experienceOf(address)\":{\"notice\":\"function experienceOf - READ ONLY - Get current unused experience amount of \\r player account.\\r\"},\"getRace(uint256)\":{\"notice\":\"function getRace - READ ONLY - Get race info\\r\"},\"getRaceLane(uint256,uint8)\":{\"notice\":\"function getRaceLane - READ ONLY - Get race lane info\\rThis is all that is needed to calc race result, and any split,\\r given race blockhash history\\r\"},\"getRaceQueue(uint16)\":{\"notice\":\"function getRaceQueue - READ ONLY - Get race queue for specific level\\rResult will always be 0-5, with the 6th always starting the race,\\r and immediately reseting the level queue to 0.\\r\"},\"getRacer(uint256)\":{\"notice\":\"function getRacer - READ ONLY - Get racer info\\r\"},\"numSettling()\":{\"notice\":\"function numSettling - READ ONLY - Get number of races currently being settled.\\rA race is being settled, if at least one settlement transaction has occured,\\r and the race is still not fully settled. Each race requires 7 settlements total.\\r The higher the number, the relatively safer it is to attempt settlement\\r given more races that need settlement at that time. Assume competition.\\r\"},\"settleRace(uint256)\":{\"notice\":\"function settleRace - TX - Settle race by id, or fallback to the next \\rMay be rerouted to diff race in settlement queue. If no races available\\r to settle, including any attempts to settle a race that has not yet finished, \\r will fail. Successful race settlements will payout, first come first serve \\r transaction order, according to gas costs of settlement steps. Seven settlement \\r transactions are required for each race in total. The last being the most \\r expensive ~375k pays out 5 finney, the first settlement being the next highest \\r gas cost at ~240k paying out 4 ginney, and each of settlements 2-6 with gas \\r cost ~185k pay out 3 finney each.\\r REWARD = (\\r     settle first lane - 4 finney, \\r     settle lanes 2-6 - 3 finney, \\r     settle race - 5 finney\\r )\\r GAS = (\\r     settle first lane - ~230k, \\r     settle lanes 2-6 - ~190k, \\r     settle race - ~350k\\r )\\r\"},\"train(uint256,uint8[])\":{\"notice\":\"function train - TX - Train racer by id. \\rIf training amount total is more than player (account) aexperience points,\\r or over the potential (genes) of the racer on any of the 3 amounts, will fail.\\r GAS = ~70k *first per account will be ~100k\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Brian/workspace/web3/block-racer/contracts/IBlockRacer.sol\":\"IBlockRacer\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/C/Users/Brian/workspace/web3/block-racer/contracts/IBlockRacer.sol\":{\"keccak256\":\"0xa182492dfe75c0a4d4fd8adc14c5c665e11d637b1d981ef9c6539031f357d918\",\"urls\":[\"bzzr://de423b3621ae50af195b73b6912f45653f3915fc5088421da17c7f804682e6ba\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.8;\r\n\r\n/**\r\n * @title BlockRacer Interface\r\n * @author Brian Ludlam\r\n * \r\n * BlockRacer is a game allowing players (per Eth account) to compete against \r\n * each other, by racing unique tokens around a blockchain racetrack. Players win\r\n * Eth by winning races, and potentially earn Eth by contributing to the settlement\r\n * of race results. Racing performance is part skill in training, and part \r\n * randomness determined by blockhash creation over time. Racers increase level \r\n * as they are trained, and are able to enter higher level races at higher levels. \r\n * Higher level races cost more to enter and payout more to winners. Lower level \r\n * races are more determined by randomness than training skill, and higher level \r\n * races are more determined by training skill than randomness.\r\n * \r\n * Racers\r\n * \r\n * Racers are non-fungible token entities, following IERC721Entity,\r\n * which follows IERC721 and in turn IERC21. \r\n * The two IERC721Entity functions interfaced are: ownerOf - returning \r\n * the address of the racer's owner, and genesOf - returning an immutable \r\n * array of 32 8bit genes determining the racer's training potential. \r\n * Racers can: Race and Train. Training increases racer performance and \r\n * racer level in following races. Racing icreasses player experience points. \r\n * Player experience points are used to train racers.\r\n * \r\n * Player Experience \r\n * \r\n * Player experience points are collected per account, by racing racers in races. \r\n * Player experience is used to train account owned racers. For each racer \r\n * in each race finished (regardless of placing), the racer's owner collects \r\n * 1-3 experience points; 1 point most commonly, 2 at about 1:5 chance, \r\n * and 3 about 1:50.\r\n * \r\n * Training and Levels\r\n * \r\n * Training costs player eperience points. Training involves increasing 3 main \r\n * racer stats: acceleration, top speed, and traction. Racer level is always total \r\n * training points / 8 (rounded down), so training automatically increases level.\r\n * Training a racer has no fee, and only requires ~70k gas. The maximum training \r\n * a racer can have is determined by racer's genes, specifally the first 3 genes, \r\n * used as: acceleration, top speed, and traction potrentials. Max training potential \r\n * for each stat is 255.(8bit genes) Max training and max level are different for each \r\n * racer, based on potential (genes), with overall max being 255 (rare) in all \r\n * 3 stats, giving max level of 3 * 255 / 8 = 95 (extremely rare.)\r\n * \r\n * Race Queue\r\n * \r\n * Racer entity enters race queue, by id, at it's current level. Race queue is 6 deep for \r\n * each level. A race starts once 6 racers (lanes), at the same level, are queued. Racer \r\n * performance values are set permanantly upon entering race. Any training during race \r\n * will not effect performance, or race level change, until next race. Racer can only be\r\n * in one race at a time. Racers may exit race queue, before race starts, but not after.\r\n * \r\n * Race Cost / Fees\r\n * \r\n * Race Entry Cost = Racing Fee + Settlement Fee\r\n * \r\n * 100% of player fees collected are transfered to player contributors in the system.\r\n * \r\n * The system has two fees: Settlement Fee and Racing Fee; both are collected\r\n * upon entering the race queue. Both are refunded upon exiting race queue. Settlement\r\n * fee is always the same at 4 finney per racer per race, consistantly payed out as \r\n * rewards to those who settle each race. Racing fee is scaled by level, starting \r\n * at 18 finney, increasing by 1.8 finney per level. Racing fees from each race are \r\n * payed out as a reward to those who win/place that race: first, second, and third. \r\n * After a race completes, all fees are payed out. Neither the contract, or the contract \r\n * owner, retain any fees.\r\n * \r\n * Race Process\r\n * \r\n * A race begins once 6 racers of the same level are queued. The start of a race is\r\n * signified by setting the race's start block to the 12th block number from the \r\n * block which processed the block start / the 6th racer being queued at a specific \r\n * level. Each racer has performance variables set upon entry, and a performance seed,\r\n * which combined with each blockhash starting with the start block, will give a distance\r\n * travelled during that block. Each race has a set level-based distance to the finish \r\n * line. Each block following start block provides a blockhash, translating into \r\n * unique racer distance travelled during that block. This distance can be calculated\r\n * in parallel to the system (by a UI) to show race progress and result, without any\r\n * transactions needed to keep the race going. Once started, the race goes until all\r\n * racers reach the finish line. In order to \"settle\" the race - payout both player\r\n * experience and winner rewards to all racer owners, as well as claim settlement \r\n * rewards - players can run the settleRace function.\r\n * \r\n * Race Settlement \r\n * \r\n * Settlers are required to settle each race. Anyone can contribute to, and profit from,\r\n * the settling of any race. Each race requires 7 settlement transactions: 1 for each \r\n * of 6 lanes, and one more to finalize the race result and payout winners. The gas \r\n * needed to finalize a race is ~340k and pays 5 finney. The first settler is \r\n * the next most expensive at ~300k, so pays out 4 finney. The middle settlers (lanes 2-6) \r\n * are all about ~250k, each payout 3 finney. Settlement order is first come \r\n * first served per race, and settlement transactions without a race to settle will \r\n * fail, costing ~1/5 finney. The reward for settling a race is ~15-20 times\r\n * the cost of a failed settlement, so relatively efficient for high competition and \r\n * scheduled automation. Trying to settle a race before it finishes (all racers reach\r\n * finish-line/ race distance) will also fail. Before allowing failed settlement, the \r\n * system will first try to provide race settlers with any other possible race to settle \r\n * before failing, to reduce failures. Note, the system is not aware of a race being\r\n * ready to settle until the first settlement transaction occurs. The system does not know\r\n * anything about any race result, until informed through settlement transactions. After \r\n * a first settlement transaction is received for a race, the system is able to reroute\r\n * settlers to that race, upon potential fail in settling intended race. For example, if 8 \r\n * transactions to settle the same race occur all at the same time on one block. The \r\n * first 7 will be successful and the 8th will potentially fail. However, if there is \r\n * another race available to settle, the 8th settler will be rerouted to settle that\r\n * other race instead, etc. A failure only potentially occurs if there are no races\r\n * to settle; all races being either already settled or not finished yet.\r\n * \r\n * Race Expiration\r\n * \r\n * Once a race has started, it's result is determined by the next 5-10 blockhashs.\r\n * Given the block history limit of 256 blocks in Ethereum, after 256 blocks a race - \r\n * whether settled or not - becomes expired, and can no longer be settled or \"replayed.\"\r\n * When a race becomes expired before being fully settled, the following settlement\r\n * that comes in, will refund all racers' Racing Fees, and settler will collect all\r\n * 24 finney of the race's settlement rewards. This encourages racers to take \r\n * responisiibity of settling own races, as well as max reward for settlers of\r\n * expired races, in order prevent any backlog of expired races (and refunding of fees \r\n * collected). When a race becomes expired after being settled, it can no longer be \r\n * replayed by a UI, due to the Eth block history limit, however if a history preserved \r\n * (within UI, Oracle, or other contract) a blockhash history going back further \r\n * than 256 blocks would allow potentially any race to always be replayable by UI. \r\n * However, expired races that are not settled can never be settled internally by the\r\n * system with accurate results, due to Eth history limit, hence refund.\r\n * \r\n * Track Conditions\r\n * \r\n * Each race starts with specific track conditions (wet vs dry) according to an\r\n * accumulative random weather pattern shifting betweeen 1 (most dry) and 255 \r\n * (most wet/muddy.) Each race has a random chance to increment or decrement by 1-3, \r\n * or remain the same. Racer's traction training allieviates track condition \r\n * speed penalty.\r\n * \r\n */\r\n \r\n/**\r\n * @title Interface IBlockRacer\r\n * @author Brian Ludlam\r\n * date May 5, 2019\r\n */\r\ninterface IBlockRacer {\r\n    /**\r\n     * function enterRaceQueue - TX - Enter racer by id, into race queue by level.\r\n     * @param id is racer id. Must be owner of entity.\r\n     * @notice Once 6 racers are queued at any given level, race will start.\r\n     * Racer must not already be racing (or in race queue)\r\n     * Racer level = total training points / 8, rounded down.\r\n     * Racing fee = 18 finney + (Racer Level * 1.8 finney)\r\n     * Settlement Fee = 4 finney.\r\n     * Race Entry Fee = Racing fee + Settlement Fee.\r\n     * GAS = (\r\n     *      first lane - create race and queue - ~210k, \r\n     *      lane 2-5 - queue - ~130k, \r\n     *      last lane - queue and start race - ~140k\r\n     * ) *first per account will be slightly more\r\n     */\r\n    function enterRaceQueue (uint256 id) external payable;\r\n    \r\n    /**\r\n     * function exitRaceQueue - TX - Exit racer by id, from current race queue. \r\n     * @param id is racer id. Must be owner of.\r\n     * @notice Racer must be in race queue and race not already started, \r\n     * or will fail; otherwise will dequeue racer and refund fees \r\n     * to owner. If 6th racer at level enters queue before exit\r\n     * transaction, race immediately starts, and exit will fail.\r\n     * Race Exit Refund = Racing fee\r\n     * GAS = ~35k - ~75k (depending on lane position)\r\n     */\r\n    function exitRaceQueue (uint256 id) external;\r\n    \r\n    /**\r\n     * function settleRace - TX - Settle race by id, or fallback to the next \r\n     * @param race is race number to settle. \r\n     * @notice May be rerouted to diff race in settlement queue. If no races available\r\n     * to settle, including any attempts to settle a race that has not yet finished, \r\n     * will fail. Successful race settlements will payout, first come first serve \r\n     * transaction order, according to gas costs of settlement steps. Seven settlement \r\n     * transactions are required for each race in total. The last being the most \r\n     * expensive ~375k pays out 5 finney, the first settlement being the next highest \r\n     * gas cost at ~240k paying out 4 ginney, and each of settlements 2-6 with gas \r\n     * cost ~185k pay out 3 finney each.\r\n     * REWARD = (\r\n     *      settle first lane - 4 finney, \r\n     *      settle lanes 2-6 - 3 finney, \r\n     *      settle race - 5 finney\r\n     * )\r\n     * GAS = (\r\n     *      settle first lane - ~230k, \r\n     *      settle lanes 2-6 - ~190k, \r\n     *      settle race - ~350k\r\n     * )\r\n     */\r\n    function settleRace (uint256 race) external;\r\n    \r\n    /**\r\n     * function train - TX - Train racer by id. \r\n     * @param id is racer id. Must be owner of.\r\n     * @param training is array of 3 8bit (0-255) values representing 3 training amounts.\r\n     * @notice If training amount total is more than player (account) aexperience points,\r\n     * or over the potential (genes) of the racer on any of the 3 amounts, will fail.\r\n     * GAS = ~70k *first per account will be ~100k\r\n     */\r\n    function train (uint256 id, uint8[] calldata training) external;\r\n    \r\n    /**\r\n     * Event RaceEntered - Fired during enterRaceQueue transaction, to signify racer\r\n     * has entered race queue successfully.\r\n     * @return owner = address of racer owner\r\n     * @return racer = IERC721Entity id, unique 256 bit\r\n     * @return race = race number, unique 256 bit\r\n     * @return level = race level\r\n     * @return lane = Racer's Lane # = 1 - 6\r\n     */\r\n    event RaceEntered (\r\n        address indexed owner,\r\n        uint256 indexed racer, \r\n        uint256 indexed race, \r\n        uint16 level,\r\n        uint8 lane,\r\n        uint256 timestamp\r\n    );\r\n    \r\n     /**\r\n     * Event RaceExited - Fired during exitRaceQueue transaction, to signify racer\r\n     * has exited race queue successfully.\r\n     * @return owner = address of racer owner\r\n     * @return racer = IERC721Entity id, unique 256 bit\r\n     * @return race = race number, unique 256 bit\r\n     * @return level = race level\r\n     * @return lane = Racer's previous lane # = 1 - 6\r\n     */\r\n    event RaceExited (\r\n        address indexed owner, \r\n        uint256 indexed racer, \r\n        uint256 indexed race, \r\n        uint16 level,\r\n        uint8 lane,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    /**\r\n     * Event RaceStarted - Fired during enterRaceQueue transaction, to signify \r\n     * the 6th racer has enter race queue at level, and race is started.\r\n     * @return race = race number, unique 256 bit\r\n     * @return level = race level\r\n     * @return distance = distance to finish line, determined by level.\r\n     * @return conditions = race track conditions (0-255)\r\n     */\r\n    event RaceStarted (\r\n        uint256 indexed race, \r\n        uint16 level,\r\n        uint32 distance,\r\n        uint8 conditions,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    /**\r\n     * Event LaneSettled - Fired duirng settleRace transaction, to signify \r\n     * successful lane settlement of a race. 6 total events will occur per race,\r\n     * one for each of 6 lanes requiring settlement. Te final settlement transaction\r\n     * fires RaceSettled event.\r\n     * @return race = race number, unique 256 bit\r\n     * @return settler = Address of settler (settleRace caller)\r\n     * @return lane = Settled lane # = 1 - 6\r\n     */\r\n    event LaneSettled (\r\n        address indexed settler, \r\n        uint256 indexed race, \r\n        uint8 lane, \r\n        uint256 timestamp\r\n    );\r\n    \r\n    /**\r\n     * Event RaceSettled - Fired duirng settleRace transaction, to signify \r\n     * successful final settlement of a race. 1 total events will occur per race.\r\n     * @return race = race number, unique 256 bit\r\n     * @return settler = Address of settler (settleRace caller)\r\n     */\r\n    event RaceSettled (\r\n        address indexed settler, \r\n        uint256 indexed race, \r\n        uint256 timestamp\r\n    );\r\n    \r\n    /**\r\n     * Event RaceFinished - Fired duirng settleRace transaction, per each 6 lanes, \r\n     * to signify successful race finish by racer. 6 total events will occur per race.\r\n     * @return owner = address of racer owner\r\n     * @return racer = IERC721Entity id, unique 256 bit\r\n     * @return race = race number, unique 256 bit\r\n     * @return level = race level\r\n     * @return place = Racer's resulting place in race finish 1st - 6th = 1 - 6\r\n     * @return splits = Racer's resulting split \"time\" = 32 splits per block.\r\n     * @return distance = Racer's resulting distance raced.\r\n     * @return exp = Experience gained during race.\r\n     * @notice (total) distance / (total) splits = avg distance per split\r\n     */\r\n    event RaceFinished (\r\n        address indexed owner, \r\n        uint256 indexed racer, \r\n        uint256 indexed race, \r\n        uint16 level,\r\n        uint8 place, \r\n        uint16 splits, \r\n        uint32 distance,\r\n        uint8 exp,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    /**\r\n     * Event RacerTrained - Fired duirng train transaction to signify \r\n     * successful racer training session. \r\n     * @return owner = address of racer owner\r\n     * @return racer = IERC721Entity id, unique 256 bit\r\n     * @return acceleration = amount of acceration training.\r\n     * @return topSpeed = amount of topSpeed training.\r\n     * @return traction = amount of traction training.\r\n     */\r\n    event RacerTrained (\r\n        address indexed owner, \r\n        uint256 indexed racer,\r\n        uint8 acceleration,\r\n        uint8 topSpeed,\r\n        uint8 traction,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    /**\r\n     * function getRace - READ ONLY - Get race info\r\n     * @param raceNumber = race number to get.\r\n     * @return start = starting block of race. All blocks after calc result until finish\r\n     * @return level = Races seperated and determined by entering racer levels.\r\n     * @return distance = Race distance to finish line.\r\n     * @return conditions = Race track conditions. 1 = dryest, 255 = wetest/muddiest\r\n     * @return lanesReady = Number of lanes with racers ready. Racers come and go until start\r\n     * @return lanesSettled = Number of and order of lanes settled.\r\n     * @return settled = Race settled flag\r\n     * @return racers = array of racer ids of racers queued or racing.\r\n     * @return finish = Race finish results, empty until race settled, then\r\n     * array of 6 racer ids ordered by place 1st..6th [id in 1st,id in 2nd,...,id in 6th]\r\n     */\r\n    function getRace (uint raceNumber) external view returns (\r\n        uint start,\r\n        uint16 level,\r\n        uint32 distance,\r\n        uint8 conditions,\r\n        uint8 lanesReady,\r\n        uint8 lanesSettled,\r\n        bool settled,\r\n        uint256[] memory racers,\r\n        uint8[] memory finish\r\n    );\r\n    \r\n    /**\r\n     * function getRaceLane - READ ONLY - Get race lane info\r\n     * @param raceNumber = race number to get.\r\n     * @param lane = lane number to get in race.\r\n     * @return id = racer id in lane\r\n     * @return seed = racer's race seed\r\n     * @return speed = racer's race speed constant\r\n     * @return max = racer's race max speed constant\r\n     * @return settled = race lane settled flag\r\n     * @notice This is all that is needed to calc race result, and any split,\r\n     * given race blockhash history\r\n     */\r\n    function getRaceLane (uint raceNumber, uint8 lane) external view returns (\r\n        uint256 id, \r\n        bytes32 seed, \r\n        uint16 speed, \r\n        uint16 max, \r\n        bool settled\r\n    );\r\n    \r\n    /**\r\n     * function getRacer - READ ONLY - Get racer info\r\n     * @param id = racer id to get.\r\n     * @return lastRace = last race raced by racer, 0 if none or previously exited race queue\r\n     * @return accel = accerlation training amount\r\n     * @return top = top speed training amount\r\n     * @return traction = traction training amount\r\n     */\r\n    function getRacer (uint id) external view returns (\r\n        uint lastRace,\r\n        uint8 accel,\r\n        uint8 top,\r\n        uint8 traction\r\n    );\r\n    \r\n    /**\r\n     * function getRaceQueue - READ ONLY - Get race queue for specific level\r\n     * @param level = race queue level to check\r\n     * @return number of racers queued at level on current block.\r\n     * @notice Result will always be 0-5, with the 6th always starting the race,\r\n     * and immediately reseting the level queue to 0.\r\n     */\r\n    function getRaceQueue (uint16 level) external view returns (uint);\r\n    \r\n    /**\r\n     * function numSettling - READ ONLY - Get number of races currently being settled.\r\n     * @return count as number of races currently being settled.\r\n     * @notice A race is being settled, if at least one settlement transaction has occured,\r\n     * and the race is still not fully settled. Each race requires 7 settlements total.\r\n     * The higher the number, the relatively safer it is to attempt settlement\r\n     * given more races that need settlement at that time. Assume competition.\r\n     */\r\n    function numSettling() external view returns(uint256 count);\r\n    \r\n    /**\r\n     * function experienceOf - READ ONLY - Get current unused experience amount of \r\n     * player account.\r\n     * @param account of owner\r\n     * @return experience amount of account.\r\n     */\r\n    function experienceOf(address account) external view returns(uint256 experience);\r\n}",
  "sourcePath": "C:\\Users\\Brian\\workspace\\web3\\block-racer\\contracts\\IBlockRacer.sol",
  "ast": {
    "absolutePath": "/C/Users/Brian/workspace/web3/block-racer/contracts/IBlockRacer.sol",
    "exportedSymbols": {
      "IBlockRacer": [
        2546
      ]
    },
    "id": 2547,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2356,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Interface IBlockRacer\r\n@author Brian Ludlam\r\ndate May 5, 2019\r",
        "fullyImplemented": false,
        "id": 2546,
        "linearizedBaseContracts": [
          2546
        ],
        "name": "IBlockRacer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "function enterRaceQueue - TX - Enter racer by id, into race queue by level.\r\n@param id is racer id. Must be owner of entity.\r\n@notice Once 6 racers are queued at any given level, race will start.\r\nRacer must not already be racing (or in race queue)\r\nRacer level = total training points / 8, rounded down.\r\nRacing fee = 18 finney + (Racer Level * 1.8 finney)\r\nSettlement Fee = 4 finney.\r\nRace Entry Fee = Racing fee + Settlement Fee.\r\nGAS = (\r\n     first lane - create race and queue - ~210k, \r\n     lane 2-5 - queue - ~130k, \r\n     last lane - queue and start race - ~140k\r\n) *first per account will be slightly more\r",
            "id": 2361,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enterRaceQueue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "9340:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9340:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9339:12:1"
            },
            "returnParameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9368:0:1"
            },
            "scope": 2546,
            "src": "9315:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function exitRaceQueue - TX - Exit racer by id, from current race queue. \r\n@param id is racer id. Must be owner of.\r\n@notice Racer must be in race queue and race not already started, \r\nor will fail; otherwise will dequeue racer and refund fees \r\nto owner. If 6th racer at level enters queue before exit\r\ntransaction, race immediately starts, and exit will fail.\r\nRace Exit Refund = Racing fee\r\nGAS = ~35k - ~75k (depending on lane position)\r",
            "id": 2366,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exitRaceQueue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2363,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "9921:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9921:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9920:12:1"
            },
            "returnParameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9941:0:1"
            },
            "scope": 2546,
            "src": "9897:45:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function settleRace - TX - Settle race by id, or fallback to the next \r\n@param race is race number to settle. \r\n@notice May be rerouted to diff race in settlement queue. If no races available\r\nto settle, including any attempts to settle a race that has not yet finished, \r\nwill fail. Successful race settlements will payout, first come first serve \r\ntransaction order, according to gas costs of settlement steps. Seven settlement \r\ntransactions are required for each race in total. The last being the most \r\nexpensive ~375k pays out 5 finney, the first settlement being the next highest \r\ngas cost at ~240k paying out 4 ginney, and each of settlements 2-6 with gas \r\ncost ~185k pay out 3 finney each.\r\nREWARD = (\r\n     settle first lane - 4 finney, \r\n     settle lanes 2-6 - 3 finney, \r\n     settle race - 5 finney\r\n)\r\nGAS = (\r\n     settle first lane - ~230k, \r\n     settle lanes 2-6 - ~190k, \r\n     settle race - ~350k\r\n)\r",
            "id": 2371,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleRace",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2368,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2371,
                  "src": "11057:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11057:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11056:14:1"
            },
            "returnParameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11079:0:1"
            },
            "scope": 2546,
            "src": "11036:44:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function train - TX - Train racer by id. \r\n@param id is racer id. Must be owner of.\r\n@param training is array of 3 8bit (0-255) values representing 3 training amounts.\r\n@notice If training amount total is more than player (account) aexperience points,\r\nor over the potential (genes) of the racer on any of the 3 amounts, will fail.\r\nGAS = ~70k *first per account will be ~100k\r",
            "id": 2379,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "train",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "11546:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11546:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2376,
                  "name": "training",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "11558:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2374,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "11558:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 2375,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "11558:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11545:39:1"
            },
            "returnParameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11593:0:1"
            },
            "scope": 2546,
            "src": "11530:64:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceEntered - Fired during enterRaceQueue transaction, to signify racer\r\nhas entered race queue successfully.\r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return lane = Racer's Lane # = 1 - 6\r",
            "id": 2393,
            "name": "RaceEntered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2381,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12020:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12020:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2383,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12052:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12052:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2385,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12085:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12085:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2387,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12117:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12117:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "indexed": false,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12140:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12140:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2391,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12161:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12161:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12009:176:1"
            },
            "src": "11991:195:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceExited - Fired during exitRaceQueue transaction, to signify racer\r\nhas exited race queue successfully.\r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return lane = Racer's previous lane # = 1 - 6\r",
            "id": 2407,
            "name": "RaceExited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2395,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12618:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12618:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2397,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12651:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12651:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12684:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12684:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2401,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12716:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12716:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2403,
                  "indexed": false,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12739:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2402,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12739:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2405,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12760:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12760:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12607:177:1"
            },
            "src": "12590:195:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceStarted - Fired during enterRaceQueue transaction, to signify \r\nthe 6th racer has enter race queue at level, and race is started.\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return distance = distance to finish line, determined by level.\r\n@return conditions = race track conditions (0-255)\r",
            "id": 2419,
            "name": "RaceStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2409,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13217:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13217:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2411,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13249:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2410,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13249:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2413,
                  "indexed": false,
                  "name": "distance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13272:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13272:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2415,
                  "indexed": false,
                  "name": "conditions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13298:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13298:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2417,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13325:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13325:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13206:143:1"
            },
            "src": "13188:162:1"
          },
          {
            "anonymous": false,
            "documentation": "Event LaneSettled - Fired duirng settleRace transaction, to signify \r\nsuccessful lane settlement of a race. 6 total events will occur per race,\r\none for each of 6 lanes requiring settlement. Te final settlement transaction\r\nfires RaceSettled event.\r\n@return race = race number, unique 256 bit\r\n@return settler = Address of settler (settleRace caller)\r\n@return lane = Settled lane # = 1 - 6\r",
            "id": 2429,
            "name": "LaneSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2421,
                  "indexed": true,
                  "name": "settler",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13849:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13849:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2423,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13884:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13884:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2425,
                  "indexed": false,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13916:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13916:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2427,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13938:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13938:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13838:124:1"
            },
            "src": "13820:143:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceSettled - Fired duirng settleRace transaction, to signify \r\nsuccessful final settlement of a race. 1 total events will occur per race.\r\n@return race = race number, unique 256 bit\r\n@return settler = Address of settler (settleRace caller)\r",
            "id": 2437,
            "name": "RaceSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "indexed": true,
                  "name": "settler",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "14298:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14298:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2433,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "14333:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14333:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2435,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "14365:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14365:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14287:102:1"
            },
            "src": "14269:121:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceFinished - Fired duirng settleRace transaction, per each 6 lanes, \r\nto signify successful race finish by racer. 6 total events will occur per race.\r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return place = Racer's resulting place in race finish 1st - 6th = 1 - 6\r\n@return splits = Racer's resulting split \"time\" = 32 splits per block.\r\n@return distance = Racer's resulting distance raced.\r\n@return exp = Experience gained during race.\r\n@notice (total) distance / (total) splits = avg distance per split\r",
            "id": 2457,
            "name": "RaceFinished",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2439,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15162:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15162:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2441,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15195:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15195:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2443,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15228:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15228:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15260:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15260:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2447,
                  "indexed": false,
                  "name": "place",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15283:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2446,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15283:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2449,
                  "indexed": false,
                  "name": "splits",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15306:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15306:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2451,
                  "indexed": false,
                  "name": "distance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15331:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2450,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15331:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2453,
                  "indexed": false,
                  "name": "exp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15357:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15357:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2455,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15377:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15377:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15151:250:1"
            },
            "src": "15132:270:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RacerTrained - Fired duirng train transaction to signify \r\nsuccessful racer training session. \r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return acceleration = amount of acceration training.\r\n@return topSpeed = amount of topSpeed training.\r\n@return traction = amount of traction training.\r",
            "id": 2471,
            "name": "RacerTrained",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2459,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15856:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15856:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2461,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15889:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15889:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "indexed": false,
                  "name": "acceleration",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15921:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15921:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2465,
                  "indexed": false,
                  "name": "topSpeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15950:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15950:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2467,
                  "indexed": false,
                  "name": "traction",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15975:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15975:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2469,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "16000:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15845:179:1"
            },
            "src": "15826:199:1"
          },
          {
            "body": null,
            "documentation": "function getRace - READ ONLY - Get race info\r\n@param raceNumber = race number to get.\r\n@return start = starting block of race. All blocks after calc result until finish\r\n@return level = Races seperated and determined by entering racer levels.\r\n@return distance = Race distance to finish line.\r\n@return conditions = Race track conditions. 1 = dryest, 255 = wetest/muddiest\r\n@return lanesReady = Number of lanes with racers ready. Racers come and go until start\r\n@return lanesSettled = Number of and order of lanes settled.\r\n@return settled = Race settled flag\r\n@return racers = array of racer ids of racers queued or racing.\r\n@return finish = Race finish results, empty until race settled, then\r\narray of 6 racer ids ordered by place 1st..6th [id in 1st,id in 2nd,...,id in 6th]\r",
            "id": 2496,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRace",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2473,
                  "name": "raceNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "16936:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16936:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16935:17:1"
            },
            "returnParameters": {
              "id": 2495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2476,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "16986:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16986:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2478,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17007:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2477,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17007:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2480,
                  "name": "distance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17030:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2479,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17030:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2482,
                  "name": "conditions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17056:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17056:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2484,
                  "name": "lanesReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17083:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2483,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17083:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2486,
                  "name": "lanesSettled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17110:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17110:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2488,
                  "name": "settled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17139:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17139:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2491,
                  "name": "racers",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17162:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2489,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17162:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2490,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "17162:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2494,
                  "name": "finish",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17196:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2492,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "17196:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 2493,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "17196:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16975:249:1"
            },
            "scope": 2546,
            "src": "16918:307:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function getRaceLane - READ ONLY - Get race lane info\r\n@param raceNumber = race number to get.\r\n@param lane = lane number to get in race.\r\n@return id = racer id in lane\r\n@return seed = racer's race seed\r\n@return speed = racer's race speed constant\r\n@return max = racer's race max speed constant\r\n@return settled = race lane settled flag\r\n@notice This is all that is needed to calc race result, and any split,\r\ngiven race blockhash history\r",
            "id": 2513,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRaceLane",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2498,
                  "name": "raceNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17787:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2497,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17787:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2500,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17804:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2499,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17804:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17786:29:1"
            },
            "returnParameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2503,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17849:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17849:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2505,
                  "name": "seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17871:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17871:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2507,
                  "name": "speed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17895:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17895:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "name": "max",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17919:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17919:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2511,
                  "name": "settled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17941:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2510,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17941:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17838:122:1"
            },
            "scope": 2546,
            "src": "17765:196:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function getRacer - READ ONLY - Get racer info\r\n@param id = racer id to get.\r\n@return lastRace = last race raced by racer, 0 if none or previously exited race queue\r\n@return accel = accerlation training amount\r\n@return top = top speed training amount\r\n@return traction = traction training amount\r",
            "id": 2526,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRacer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2515,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18349:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2514,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18349:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18348:9:1"
            },
            "returnParameters": {
              "id": 2525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2518,
                  "name": "lastRace",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18391:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18391:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2520,
                  "name": "accel",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18415:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18415:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "name": "top",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18437:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18437:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2524,
                  "name": "traction",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18457:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2523,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18457:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18380:98:1"
            },
            "scope": 2546,
            "src": "18330:149:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function getRaceQueue - READ ONLY - Get race queue for specific level\r\n@param level = race queue level to check\r\n@return number of racers queued at level on current block.\r\n@notice Result will always be 0-5, with the 6th always starting the race,\r\nand immediately reseting the level queue to 0.\r",
            "id": 2533,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRaceQueue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2533,
                  "src": "18863:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18863:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18862:14:1"
            },
            "returnParameters": {
              "id": 2532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2531,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2533,
                  "src": "18900:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18900:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18899:6:1"
            },
            "scope": 2546,
            "src": "18840:66:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function numSettling - READ ONLY - Get number of races currently being settled.\r\n@return count as number of races currently being settled.\r\n@notice A race is being settled, if at least one settlement transaction has occured,\r\nand the race is still not fully settled. Each race requires 7 settlements total.\r\nThe higher the number, the relatively safer it is to attempt settlement\r\ngiven more races that need settlement at that time. Assume competition.\r",
            "id": 2538,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numSettling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19452:2:1"
            },
            "returnParameters": {
              "id": 2537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2536,
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "scope": 2538,
                  "src": "19477:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19477:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19476:15:1"
            },
            "scope": 2546,
            "src": "19432:60:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function experienceOf - READ ONLY - Get current unused experience amount of \r\nplayer account.\r\n@param account of owner\r\n@return experience amount of account.\r",
            "id": 2545,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "experienceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2540,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2545,
                  "src": "19731:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19731:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19730:17:1"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2543,
                  "name": "experience",
                  "nodeType": "VariableDeclaration",
                  "scope": 2545,
                  "src": "19770:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19770:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19769:20:1"
            },
            "scope": 2546,
            "src": "19709:81:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2547,
        "src": "8559:11234:1"
      }
    ],
    "src": "0:19793:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Brian/workspace/web3/block-racer/contracts/IBlockRacer.sol",
    "exportedSymbols": {
      "IBlockRacer": [
        2546
      ]
    },
    "id": 2547,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2356,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Interface IBlockRacer\r\n@author Brian Ludlam\r\ndate May 5, 2019\r",
        "fullyImplemented": false,
        "id": 2546,
        "linearizedBaseContracts": [
          2546
        ],
        "name": "IBlockRacer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "function enterRaceQueue - TX - Enter racer by id, into race queue by level.\r\n@param id is racer id. Must be owner of entity.\r\n@notice Once 6 racers are queued at any given level, race will start.\r\nRacer must not already be racing (or in race queue)\r\nRacer level = total training points / 8, rounded down.\r\nRacing fee = 18 finney + (Racer Level * 1.8 finney)\r\nSettlement Fee = 4 finney.\r\nRace Entry Fee = Racing fee + Settlement Fee.\r\nGAS = (\r\n     first lane - create race and queue - ~210k, \r\n     lane 2-5 - queue - ~130k, \r\n     last lane - queue and start race - ~140k\r\n) *first per account will be slightly more\r",
            "id": 2361,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enterRaceQueue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "9340:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9340:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9339:12:1"
            },
            "returnParameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9368:0:1"
            },
            "scope": 2546,
            "src": "9315:54:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function exitRaceQueue - TX - Exit racer by id, from current race queue. \r\n@param id is racer id. Must be owner of.\r\n@notice Racer must be in race queue and race not already started, \r\nor will fail; otherwise will dequeue racer and refund fees \r\nto owner. If 6th racer at level enters queue before exit\r\ntransaction, race immediately starts, and exit will fail.\r\nRace Exit Refund = Racing fee\r\nGAS = ~35k - ~75k (depending on lane position)\r",
            "id": 2366,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exitRaceQueue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2363,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "9921:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9921:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9920:12:1"
            },
            "returnParameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9941:0:1"
            },
            "scope": 2546,
            "src": "9897:45:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function settleRace - TX - Settle race by id, or fallback to the next \r\n@param race is race number to settle. \r\n@notice May be rerouted to diff race in settlement queue. If no races available\r\nto settle, including any attempts to settle a race that has not yet finished, \r\nwill fail. Successful race settlements will payout, first come first serve \r\ntransaction order, according to gas costs of settlement steps. Seven settlement \r\ntransactions are required for each race in total. The last being the most \r\nexpensive ~375k pays out 5 finney, the first settlement being the next highest \r\ngas cost at ~240k paying out 4 ginney, and each of settlements 2-6 with gas \r\ncost ~185k pay out 3 finney each.\r\nREWARD = (\r\n     settle first lane - 4 finney, \r\n     settle lanes 2-6 - 3 finney, \r\n     settle race - 5 finney\r\n)\r\nGAS = (\r\n     settle first lane - ~230k, \r\n     settle lanes 2-6 - ~190k, \r\n     settle race - ~350k\r\n)\r",
            "id": 2371,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleRace",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2368,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2371,
                  "src": "11057:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11057:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11056:14:1"
            },
            "returnParameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11079:0:1"
            },
            "scope": 2546,
            "src": "11036:44:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function train - TX - Train racer by id. \r\n@param id is racer id. Must be owner of.\r\n@param training is array of 3 8bit (0-255) values representing 3 training amounts.\r\n@notice If training amount total is more than player (account) aexperience points,\r\nor over the potential (genes) of the racer on any of the 3 amounts, will fail.\r\nGAS = ~70k *first per account will be ~100k\r",
            "id": 2379,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "train",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "11546:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11546:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2376,
                  "name": "training",
                  "nodeType": "VariableDeclaration",
                  "scope": 2379,
                  "src": "11558:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2374,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "11558:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 2375,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "11558:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11545:39:1"
            },
            "returnParameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11593:0:1"
            },
            "scope": 2546,
            "src": "11530:64:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceEntered - Fired during enterRaceQueue transaction, to signify racer\r\nhas entered race queue successfully.\r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return lane = Racer's Lane # = 1 - 6\r",
            "id": 2393,
            "name": "RaceEntered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2381,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12020:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12020:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2383,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12052:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12052:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2385,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12085:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12085:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2387,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12117:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12117:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "indexed": false,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12140:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12140:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2391,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2393,
                  "src": "12161:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12161:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12009:176:1"
            },
            "src": "11991:195:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceExited - Fired during exitRaceQueue transaction, to signify racer\r\nhas exited race queue successfully.\r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return lane = Racer's previous lane # = 1 - 6\r",
            "id": 2407,
            "name": "RaceExited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2395,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12618:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12618:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2397,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12651:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12651:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12684:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12684:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2401,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12716:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12716:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2403,
                  "indexed": false,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12739:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2402,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12739:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2405,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2407,
                  "src": "12760:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12760:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12607:177:1"
            },
            "src": "12590:195:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceStarted - Fired during enterRaceQueue transaction, to signify \r\nthe 6th racer has enter race queue at level, and race is started.\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return distance = distance to finish line, determined by level.\r\n@return conditions = race track conditions (0-255)\r",
            "id": 2419,
            "name": "RaceStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2409,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13217:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13217:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2411,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13249:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2410,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13249:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2413,
                  "indexed": false,
                  "name": "distance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13272:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13272:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2415,
                  "indexed": false,
                  "name": "conditions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13298:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2414,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13298:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2417,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2419,
                  "src": "13325:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13325:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13206:143:1"
            },
            "src": "13188:162:1"
          },
          {
            "anonymous": false,
            "documentation": "Event LaneSettled - Fired duirng settleRace transaction, to signify \r\nsuccessful lane settlement of a race. 6 total events will occur per race,\r\none for each of 6 lanes requiring settlement. Te final settlement transaction\r\nfires RaceSettled event.\r\n@return race = race number, unique 256 bit\r\n@return settler = Address of settler (settleRace caller)\r\n@return lane = Settled lane # = 1 - 6\r",
            "id": 2429,
            "name": "LaneSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2421,
                  "indexed": true,
                  "name": "settler",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13849:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13849:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2423,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13884:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13884:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2425,
                  "indexed": false,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13916:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2424,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13916:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2427,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "13938:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13938:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13838:124:1"
            },
            "src": "13820:143:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceSettled - Fired duirng settleRace transaction, to signify \r\nsuccessful final settlement of a race. 1 total events will occur per race.\r\n@return race = race number, unique 256 bit\r\n@return settler = Address of settler (settleRace caller)\r",
            "id": 2437,
            "name": "RaceSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2431,
                  "indexed": true,
                  "name": "settler",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "14298:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14298:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2433,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "14333:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14333:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2435,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2437,
                  "src": "14365:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14365:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14287:102:1"
            },
            "src": "14269:121:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RaceFinished - Fired duirng settleRace transaction, per each 6 lanes, \r\nto signify successful race finish by racer. 6 total events will occur per race.\r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return race = race number, unique 256 bit\r\n@return level = race level\r\n@return place = Racer's resulting place in race finish 1st - 6th = 1 - 6\r\n@return splits = Racer's resulting split \"time\" = 32 splits per block.\r\n@return distance = Racer's resulting distance raced.\r\n@return exp = Experience gained during race.\r\n@notice (total) distance / (total) splits = avg distance per split\r",
            "id": 2457,
            "name": "RaceFinished",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2439,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15162:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15162:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2441,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15195:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15195:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2443,
                  "indexed": true,
                  "name": "race",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15228:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15228:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "indexed": false,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15260:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15260:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2447,
                  "indexed": false,
                  "name": "place",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15283:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2446,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15283:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2449,
                  "indexed": false,
                  "name": "splits",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15306:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "15306:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2451,
                  "indexed": false,
                  "name": "distance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15331:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2450,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15331:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2453,
                  "indexed": false,
                  "name": "exp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15357:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15357:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2455,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "15377:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15377:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15151:250:1"
            },
            "src": "15132:270:1"
          },
          {
            "anonymous": false,
            "documentation": "Event RacerTrained - Fired duirng train transaction to signify \r\nsuccessful racer training session. \r\n@return owner = address of racer owner\r\n@return racer = IERC721Entity id, unique 256 bit\r\n@return acceleration = amount of acceration training.\r\n@return topSpeed = amount of topSpeed training.\r\n@return traction = amount of traction training.\r",
            "id": 2471,
            "name": "RacerTrained",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2459,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15856:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15856:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2461,
                  "indexed": true,
                  "name": "racer",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15889:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15889:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "indexed": false,
                  "name": "acceleration",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15921:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15921:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2465,
                  "indexed": false,
                  "name": "topSpeed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15950:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2464,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15950:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2467,
                  "indexed": false,
                  "name": "traction",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "15975:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "15975:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2469,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 2471,
                  "src": "16000:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15845:179:1"
            },
            "src": "15826:199:1"
          },
          {
            "body": null,
            "documentation": "function getRace - READ ONLY - Get race info\r\n@param raceNumber = race number to get.\r\n@return start = starting block of race. All blocks after calc result until finish\r\n@return level = Races seperated and determined by entering racer levels.\r\n@return distance = Race distance to finish line.\r\n@return conditions = Race track conditions. 1 = dryest, 255 = wetest/muddiest\r\n@return lanesReady = Number of lanes with racers ready. Racers come and go until start\r\n@return lanesSettled = Number of and order of lanes settled.\r\n@return settled = Race settled flag\r\n@return racers = array of racer ids of racers queued or racing.\r\n@return finish = Race finish results, empty until race settled, then\r\narray of 6 racer ids ordered by place 1st..6th [id in 1st,id in 2nd,...,id in 6th]\r",
            "id": 2496,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRace",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2473,
                  "name": "raceNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "16936:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16936:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16935:17:1"
            },
            "returnParameters": {
              "id": 2495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2476,
                  "name": "start",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "16986:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16986:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2478,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17007:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2477,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17007:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2480,
                  "name": "distance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17030:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2479,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17030:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2482,
                  "name": "conditions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17056:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17056:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2484,
                  "name": "lanesReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17083:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2483,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17083:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2486,
                  "name": "lanesSettled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17110:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17110:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2488,
                  "name": "settled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17139:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2487,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17139:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2491,
                  "name": "racers",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17162:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2489,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17162:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2490,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "17162:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2494,
                  "name": "finish",
                  "nodeType": "VariableDeclaration",
                  "scope": 2496,
                  "src": "17196:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2492,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "17196:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 2493,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "17196:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16975:249:1"
            },
            "scope": 2546,
            "src": "16918:307:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function getRaceLane - READ ONLY - Get race lane info\r\n@param raceNumber = race number to get.\r\n@param lane = lane number to get in race.\r\n@return id = racer id in lane\r\n@return seed = racer's race seed\r\n@return speed = racer's race speed constant\r\n@return max = racer's race max speed constant\r\n@return settled = race lane settled flag\r\n@notice This is all that is needed to calc race result, and any split,\r\ngiven race blockhash history\r",
            "id": 2513,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRaceLane",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2498,
                  "name": "raceNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17787:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2497,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17787:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2500,
                  "name": "lane",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17804:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2499,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17804:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17786:29:1"
            },
            "returnParameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2503,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17849:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17849:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2505,
                  "name": "seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17871:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17871:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2507,
                  "name": "speed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17895:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17895:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "name": "max",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17919:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "17919:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2511,
                  "name": "settled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "17941:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2510,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17941:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17838:122:1"
            },
            "scope": 2546,
            "src": "17765:196:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function getRacer - READ ONLY - Get racer info\r\n@param id = racer id to get.\r\n@return lastRace = last race raced by racer, 0 if none or previously exited race queue\r\n@return accel = accerlation training amount\r\n@return top = top speed training amount\r\n@return traction = traction training amount\r",
            "id": 2526,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRacer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2515,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18349:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2514,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18349:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18348:9:1"
            },
            "returnParameters": {
              "id": 2525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2518,
                  "name": "lastRace",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18391:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18391:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2520,
                  "name": "accel",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18415:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18415:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "name": "top",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18437:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18437:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2524,
                  "name": "traction",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "18457:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2523,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18457:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18380:98:1"
            },
            "scope": 2546,
            "src": "18330:149:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function getRaceQueue - READ ONLY - Get race queue for specific level\r\n@param level = race queue level to check\r\n@return number of racers queued at level on current block.\r\n@notice Result will always be 0-5, with the 6th always starting the race,\r\nand immediately reseting the level queue to 0.\r",
            "id": 2533,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRaceQueue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "name": "level",
                  "nodeType": "VariableDeclaration",
                  "scope": 2533,
                  "src": "18863:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18863:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18862:14:1"
            },
            "returnParameters": {
              "id": 2532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2531,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2533,
                  "src": "18900:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18900:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18899:6:1"
            },
            "scope": 2546,
            "src": "18840:66:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function numSettling - READ ONLY - Get number of races currently being settled.\r\n@return count as number of races currently being settled.\r\n@notice A race is being settled, if at least one settlement transaction has occured,\r\nand the race is still not fully settled. Each race requires 7 settlements total.\r\nThe higher the number, the relatively safer it is to attempt settlement\r\ngiven more races that need settlement at that time. Assume competition.\r",
            "id": 2538,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numSettling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19452:2:1"
            },
            "returnParameters": {
              "id": 2537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2536,
                  "name": "count",
                  "nodeType": "VariableDeclaration",
                  "scope": 2538,
                  "src": "19477:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19477:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19476:15:1"
            },
            "scope": 2546,
            "src": "19432:60:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "function experienceOf - READ ONLY - Get current unused experience amount of \r\nplayer account.\r\n@param account of owner\r\n@return experience amount of account.\r",
            "id": 2545,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "experienceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2540,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 2545,
                  "src": "19731:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19731:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19730:17:1"
            },
            "returnParameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2543,
                  "name": "experience",
                  "nodeType": "VariableDeclaration",
                  "scope": 2545,
                  "src": "19770:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19770:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19769:20:1"
            },
            "scope": 2546,
            "src": "19709:81:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2547,
        "src": "8559:11234:1"
      }
    ],
    "src": "0:19793:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-07-02T00:45:50.882Z",
  "devdoc": {
    "author": "Brian Ludlam\r date May 5, 2019\r",
    "methods": {
      "enterRaceQueue(uint256)": {
        "params": {
          "id": "is racer id. Must be owner of entity.\r"
        }
      },
      "exitRaceQueue(uint256)": {
        "params": {
          "id": "is racer id. Must be owner of.\r"
        }
      },
      "experienceOf(address)": {
        "params": {
          "account": "of owner\r"
        },
        "return": "experience amount of account.\r"
      },
      "getRace(uint256)": {
        "params": {
          "raceNumber": "= race number to get.\r"
        },
        "return": "start = starting block of race. All blocks after calc result until finish\rlevel = Races seperated and determined by entering racer levels.\rdistance = Race distance to finish line.\rconditions = Race track conditions. 1 = dryest, 255 = wetest/muddiest\rlanesReady = Number of lanes with racers ready. Racers come and go until start\rlanesSettled = Number of and order of lanes settled.\rsettled = Race settled flag\rracers = array of racer ids of racers queued or racing.\rfinish = Race finish results, empty until race settled, then\r array of 6 racer ids ordered by place 1st..6th [id in 1st,id in 2nd,...,id in 6th]\r"
      },
      "getRaceLane(uint256,uint8)": {
        "params": {
          "lane": "= lane number to get in race.\r",
          "raceNumber": "= race number to get.\r"
        },
        "return": "id = racer id in lane\rseed = racer's race seed\rspeed = racer's race speed constant\rmax = racer's race max speed constant\rsettled = race lane settled flag\r"
      },
      "getRaceQueue(uint16)": {
        "params": {
          "level": "= race queue level to check\r"
        },
        "return": "number of racers queued at level on current block.\r"
      },
      "getRacer(uint256)": {
        "params": {
          "id": "= racer id to get.\r"
        },
        "return": "lastRace = last race raced by racer, 0 if none or previously exited race queue\raccel = accerlation training amount\rtop = top speed training amount\rtraction = traction training amount\r"
      },
      "numSettling()": {
        "return": "count as number of races currently being settled.\r"
      },
      "settleRace(uint256)": {
        "params": {
          "race": "is race number to settle. \r"
        }
      },
      "train(uint256,uint8[])": {
        "params": {
          "id": "is racer id. Must be owner of.\r",
          "training": "is array of 3 8bit (0-255) values representing 3 training amounts.\r"
        }
      }
    },
    "title": "Interface IBlockRacer\r"
  },
  "userdoc": {
    "methods": {
      "enterRaceQueue(uint256)": {
        "notice": "function enterRaceQueue - TX - Enter racer by id, into race queue by level.\rOnce 6 racers are queued at any given level, race will start.\r Racer must not already be racing (or in race queue)\r Racer level = total training points / 8, rounded down.\r Racing fee = 18 finney + (Racer Level * 1.8 finney)\r Settlement Fee = 4 finney.\r Race Entry Fee = Racing fee + Settlement Fee.\r GAS = (\r     first lane - create race and queue - ~210k, \r     lane 2-5 - queue - ~130k, \r     last lane - queue and start race - ~140k\r ) *first per account will be slightly more\r"
      },
      "exitRaceQueue(uint256)": {
        "notice": "function exitRaceQueue - TX - Exit racer by id, from current race queue. \rRacer must be in race queue and race not already started, \r or will fail; otherwise will dequeue racer and refund fees \r to owner. If 6th racer at level enters queue before exit\r transaction, race immediately starts, and exit will fail.\r Race Exit Refund = Racing fee\r GAS = ~35k - ~75k (depending on lane position)\r"
      },
      "experienceOf(address)": {
        "notice": "function experienceOf - READ ONLY - Get current unused experience amount of \r player account.\r"
      },
      "getRace(uint256)": {
        "notice": "function getRace - READ ONLY - Get race info\r"
      },
      "getRaceLane(uint256,uint8)": {
        "notice": "function getRaceLane - READ ONLY - Get race lane info\rThis is all that is needed to calc race result, and any split,\r given race blockhash history\r"
      },
      "getRaceQueue(uint16)": {
        "notice": "function getRaceQueue - READ ONLY - Get race queue for specific level\rResult will always be 0-5, with the 6th always starting the race,\r and immediately reseting the level queue to 0.\r"
      },
      "getRacer(uint256)": {
        "notice": "function getRacer - READ ONLY - Get racer info\r"
      },
      "numSettling()": {
        "notice": "function numSettling - READ ONLY - Get number of races currently being settled.\rA race is being settled, if at least one settlement transaction has occured,\r and the race is still not fully settled. Each race requires 7 settlements total.\r The higher the number, the relatively safer it is to attempt settlement\r given more races that need settlement at that time. Assume competition.\r"
      },
      "settleRace(uint256)": {
        "notice": "function settleRace - TX - Settle race by id, or fallback to the next \rMay be rerouted to diff race in settlement queue. If no races available\r to settle, including any attempts to settle a race that has not yet finished, \r will fail. Successful race settlements will payout, first come first serve \r transaction order, according to gas costs of settlement steps. Seven settlement \r transactions are required for each race in total. The last being the most \r expensive ~375k pays out 5 finney, the first settlement being the next highest \r gas cost at ~240k paying out 4 ginney, and each of settlements 2-6 with gas \r cost ~185k pay out 3 finney each.\r REWARD = (\r     settle first lane - 4 finney, \r     settle lanes 2-6 - 3 finney, \r     settle race - 5 finney\r )\r GAS = (\r     settle first lane - ~230k, \r     settle lanes 2-6 - ~190k, \r     settle race - ~350k\r )\r"
      },
      "train(uint256,uint8[])": {
        "notice": "function train - TX - Train racer by id. \rIf training amount total is more than player (account) aexperience points,\r or over the potential (genes) of the racer on any of the 3 amounts, will fail.\r GAS = ~70k *first per account will be ~100k\r"
      }
    }
  }
}